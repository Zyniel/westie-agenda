# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Send Survey and Planning from GDrive

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: {}
  # Allows you to run this workflow programmatically
  repository_dispatch:
    types: [Send Survey and Planning from GDrive]

env:
  DEPLOY_ENV: prod
  GITHUB_ACTIONS: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "whatsapp"
  cancel-in-progress: false

jobs:

  # ===========================================================================
  # Download, update and Commit
  # ===========================================================================
  commit:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.commit-and-push.outputs.commit_hash }}

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
      pull-requests: write

    steps:
      - name: Identify - ${{github.event.client_payload.id}}
        run: echo Run identifier ${{ github.event.client_payload.id }}

      # Checkout "master"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Prepare Dataset from Excel file for Site
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Latest stable
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: '**/requirements.*.txt'
      - name: Install dependencies
        run: |
          pip install -r ./src/python/requirements.notifier.txt
          sudo apt install x11-utils gnumeric xvfb xclip
      - name: Unpack Chrome Profile
        env:
          CHROME_PROFILE_PWD: ${{ secrets.CHROME_PROFILE_PWD}}
        run: |
          sudo apt-get install p7zip-full
          unzip -P "$CHROME_PROFILE_PWD" ./chrome/__profile/chrome-profile.zip -d ./chrome/
      - name: Pull Google Drive Content
        env:
          GM_SERVICE_ACCOUNT: ${{ secrets.GM_SERVICE_ACCOUNT }}
          VIRTUAL_DISPLAY: '1'
        run: |
          python ./src/python/community_notifier.py --conf ./src/python/config.$DEPLOY_ENV.yml
